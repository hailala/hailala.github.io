(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{471:function(v,t,_){v.exports=_.p+"assets/img/生命周期.6eba8c66.png"},493:function(v,t,_){"use strict";_.r(t);var e=_(2),d=Object(e.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",[v._v("VUE")]),v._v(" "),t("h2",{attrs:{id:"_1-什么是mvvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是mvvm"}},[v._v("#")]),v._v(" 1-什么是MVVM")]),v._v(" "),t("p",[t("code",[v._v("MVVM")]),v._v("是"),t("code",[v._v("Model-View-ViewModel")]),v._v("的缩写，"),t("code",[v._v("Model")]),v._v("代表数据模型，定义数据操作的业务逻辑，"),t("code",[v._v("View")]),v._v("代表视图层，负责将数据模型渲染到页面上，"),t("code",[v._v("ViewModel")]),v._v("通过双向绑定把View和Model进行同步交互，不需要手动操作DOM的一种设计思想。")]),v._v(" "),t("h2",{attrs:{id:"_2-mvvm和mvc区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-mvvm和mvc区别"}},[v._v("#")]),v._v(" 2-MVVM和MVC区别？")]),v._v(" "),t("p",[v._v("MVVM和MVC都是一种设计思想，主要就是MVC中的Controller演变成ViewModel,，MVVM主要通过数据来显示视图层而不是操作节点，解决了MVC中大量的DOM操作使页面渲染性能降低，加载速度慢，影响用户体验问题。主要用于数据操作比较多的场景。")]),v._v(" "),t("h2",{attrs:{id:"_3-vue的优缺点是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue的优缺点是什么"}},[v._v("#")]),v._v(" 3-Vue的优缺点是什么")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("优点：低耦合，可重用性，独立开发，可测试，渐进式")])]),v._v(" "),t("li",[t("p",[v._v("缺点：不利于SEO，社区维护力度不强，相比还不够成熟（"),t("em",[v._v("seo")]),v._v("一般指搜索引擎优化）")])])]),v._v(" "),t("h2",{attrs:{id:"_4-组件之间传值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件之间传值"}},[v._v("#")]),v._v(" 4-组件之间传值")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("父向子传值：属性传值，父组件通过给子组件标签上定义属性，子组件通过"),t("code",[v._v("props")]),v._v("方法接收数据；")])]),v._v(" "),t("li",[t("p",[v._v("子向父传值：事件传值，子组件通过"),t("code",[v._v("$emit(‘自定义事件名’，值)")]),v._v("，父组件通过子组件上的@自定义事件名=“函数”接收")])]),v._v(" "),t("li",[t("p",[v._v("非父子组件传值：全局定义"),t("code",[v._v("bus")]),v._v("，"),t("code",[v._v("var bus=new Vue() ;")]),v._v(" 发送者: "),t("code",[v._v("bus.$emit(‘自定义名’，值)")]),v._v("；接受者:"),t("code",[v._v("bus.$on(‘自定义名’，(值)=>{})")])])])]),v._v(" "),t("h2",{attrs:{id:"_5-路由之间传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-路由之间传参"}},[v._v("#")]),v._v(" 5-路由之间传参")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("路由字典中："),t("code",[v._v("routes={path:’/detail/:id’,component:Detail}")])])]),v._v(" "),t("li",[t("p",[v._v("标签中："),t("code",[v._v("<router-link :to=”‘/detail/’+item.id ”>")])])]),v._v(" "),t("li",[t("p",[v._v("Js中："),t("code",[v._v("this.$route.params.id")])])])]),v._v(" "),t("h2",{attrs:{id:"_6-vuex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-vuex"}},[v._v("#")]),v._v(" 6-Vuex")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("State")]),v._v("：数据源存放地，数据是响应式的")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Action")]),v._v(": 逻辑处理，提交的是mutation,包含任意异步操作")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Mutation")]),v._v(": 修改state里的公共数据")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Getter")]),v._v(": 相当于计算属性，可以复用，可缓存")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Module")]),v._v(": 模块化")])])]),v._v(" "),t("h2",{attrs:{id:"_7-vue生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-vue生命周期"}},[v._v("#")]),v._v(" 7-Vue生命周期")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("vue有8种生命周期函数：")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("钩子函数")]),v._v(" "),t("th",[v._v("触发的行为")]),v._v(" "),t("th",[v._v("在此阶段可以做的事情")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("beforeCreadted")]),v._v(" "),t("td",[v._v("vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。")]),v._v(" "),t("td",[v._v("加loading事件")])]),v._v(" "),t("tr",[t("td",[v._v("created")]),v._v(" "),t("td",[v._v("vue实例的数据对象data有了，$el还没有")]),v._v(" "),t("td",[v._v("结束loading、请求数据为mounted渲染做准备")])]),v._v(" "),t("tr",[t("td",[v._v("beforeMount")]),v._v(" "),t("td",[v._v("vue实例的$el和data都初始化了，但还是虚拟的dom节点，具体的data.filter还未替换。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("mounted")]),v._v(" "),t("td",[v._v("vue实例挂载完成，data.filter成功渲染")]),v._v(" "),t("td",[v._v("配合路由钩子使用")])]),v._v(" "),t("tr",[t("td",[v._v("beforeUpdate")]),v._v(" "),t("td",[v._v("data更新时触发")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("updated")]),v._v(" "),t("td",[v._v("data更新时触发")]),v._v(" "),t("td",[v._v("数据更新时，做一些处理（此处也可以用watch进行观测）")])]),v._v(" "),t("tr",[t("td",[v._v("beforeDestroy")]),v._v(" "),t("td",[v._v("组件销毁时触发")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("destroyed")]),v._v(" "),t("td",[v._v("组件销毁时触发，vue实例解除了事件监听以及和dom的绑定（无响应了），但DOM节点依旧存在")]),v._v(" "),t("td",[v._v("组件销毁时进行提示")])])])])])]),v._v(" "),t("p",[t("code",[v._v("beforeCreate")]),v._v("：Vue 实例的挂载元素 $el 和数据对象 data 都为未定义，还未初始化。")]),v._v(" "),t("p",[t("code",[v._v("created")]),v._v("：vue 实例的数据对象 data 有值了，$el 没有。")]),v._v(" "),t("p",[t("code",[v._v("beforeMount")]),v._v("：vue 实例的 $el 和 data 都初始化了，但还是虚拟的 dom 节点，具体的 data.filter 还未替换掉。mounted：vue 实例挂载完成，data.filter 成功渲染。")]),v._v(" "),t("p",[t("code",[v._v("beforeUpdate")]),v._v("：data 更新时触发。")]),v._v(" "),t("p",[t("code",[v._v("updated")]),v._v("：data 更新时触发。")]),v._v(" "),t("p",[t("code",[v._v("beforeDestroy")]),v._v("：组件销毁时触发。")]),v._v(" "),t("p",[t("code",[v._v("destroyed")]),v._v("：组件销毁时触发，vue 实例解除了事件监听以及 dom 的绑定（无响应了），但 DOM 节点依旧存在。")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("图片解析")]),v._v(" "),t("img",{staticStyle:{zoom:"150%"},attrs:{src:_(471),alt:"array"}})])])}),[],!1,null,null,null);t.default=d.exports}}]);